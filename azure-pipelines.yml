# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self



variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f7758c95-0766-4f4e-a7dc-085da4021c33'
  imageRepository: 'kiranugmavenproject'
  containerRegistry: 'starappimage.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  IMAGE_TAG: '$(Build.BuildId)'


  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/SimpleJavaProject/pom.xml'
        goals: 'clean package'
        options: '-Dmaven.compiler.source=6 -Dmaven.compiler.target=6'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(IMAGE_TAG)
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'aksconnection'
        manifests: '$(Build.SourcesDirectory)/kubernetes-manifests/myapp-deployment.yaml'
        substitutionVariables: |
          IMAGE_TAG=$(IMAGE_TAG)
